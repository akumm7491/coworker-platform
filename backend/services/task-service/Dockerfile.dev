# Development stage
FROM node:20-alpine
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache python3 make g++

# Build shared kernel first
WORKDIR /app/backend/services/shared-kernel
COPY backend/services/shared-kernel/package*.json ./
COPY backend/services/shared-kernel/tsconfig.json ./
COPY backend/services/shared-kernel/src ./src
RUN npm install
RUN npm run build
RUN npm pack

# Build task service
WORKDIR /app/backend/services/task-service
# Copy shared kernel tarball
COPY --from=0 /app/backend/services/shared-kernel/coworker-shared-kernel-*.tgz ../
# Copy task service files
COPY backend/services/task-service/package*.json ./
# Remove @coworker/shared-kernel from package.json dependencies temporarily
RUN sed -i 's/"@coworker\/shared-kernel": ".*",//' package.json
# Install dependencies excluding shared-kernel
RUN npm install
# Install shared-kernel from local tarball
RUN npm install ../coworker-shared-kernel-*.tgz
RUN npm install -g ts-node-dev

# Copy source code
COPY backend/services/task-service/tsconfig.json ./
COPY backend/services/task-service/src ./src

# Set environment variables
ENV NODE_ENV=development
ENV PORT=3455

# Expose the port the app runs on
EXPOSE 3455

# Start the app in development mode
CMD ["npm", "run", "start:dev"]
