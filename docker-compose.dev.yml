name: coworker-platform

services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile.dev
    ports:
      - '3456:3456'
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - VITE_API_GATEWAY_URL=http://localhost:3450
    depends_on:
      - api-gateway
    networks:
      - app-network

  api-gateway:
    build:
      context: ./server/src/services/gateway
      dockerfile: Dockerfile.dev
    ports:
      - '3450:3450'
    volumes:
      - ./server/src/services/gateway:/app
      - ./server/src/services/shared:/app/shared
      - /app/node_modules
    environment:
      - PORT=3450
      - NODE_ENV=development
      - IDENTITY_SERVICE_URL=http://identity-service:3451
      - AGENT_SERVICE_URL=http://agent-service:3452
      - MONITORING_SERVICE_URL=http://monitoring-service:3453
      - COLLABORATION_SERVICE_URL=http://collaboration-service:3454
    depends_on:
      - identity-service
      - agent-service
      - monitoring-service
      - collaboration-service
    networks:
      - app-network

  identity-service:
    build:
      context: ./server/src/services/identity
      dockerfile: Dockerfile.dev
    ports:
      - '3451:3451'
    volumes:
      - ./server/src/services/identity:/app
      - ./server/src/services/shared:/app/shared
      - /app/node_modules
    environment:
      - PORT=3451
      - NODE_ENV=development
      - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/identity_db
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    depends_on:
      - postgres
    networks:
      - app-network

  agent-service:
    build:
      context: ./server/src/services/agent
      dockerfile: Dockerfile.dev
    ports:
      - '3452:3452'
    volumes:
      - ./server/src/services/agent:/app
      - ./server/src/services/shared:/app/shared
      - /app/node_modules
    environment:
      - PORT=3452
      - NODE_ENV=development
      - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/agent_db
    depends_on:
      - postgres
    networks:
      - app-network

  monitoring-service:
    build:
      context: ./server/src/services/monitoring
      dockerfile: Dockerfile.dev
    ports:
      - '3453:3453'
    volumes:
      - ./server/src/services/monitoring:/app
      - ./server/src/services/shared:/app/shared
      - /app/node_modules
    environment:
      - PORT=3453
      - NODE_ENV=development
      - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/monitoring_db
    depends_on:
      - postgres
    networks:
      - app-network

  collaboration-service:
    build:
      context: ./server/src/services/collaboration
      dockerfile: Dockerfile.dev
    ports:
      - '3454:3454'
    volumes:
      - ./server/src/services/collaboration:/app
      - ./server/src/services/shared:/app/shared
      - /app/node_modules
    environment:
      - PORT=3454
      - NODE_ENV=development
      - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/collaboration_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    ports:
      - '5433:5432'  # Changed from 5432:5432 to avoid conflict
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    ports:
      - '2181:2181'
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
