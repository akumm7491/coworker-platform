version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    ports:
      - "3456:3456"
    environment:
      - VITE_API_URL=http://localhost:3457
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    networks:
      - app-network
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    ports:
      - "3457:3457"
    environment:
      - NODE_ENV=development
      - BACKEND_PORT=3457
      - MONGODB_URI=mongodb://mongodb:27017/coworker-platform
      - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/coworker
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=30d
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - BASE_URL=http://localhost:3457
      - FRONTEND_URL=http://localhost:3456
      - CLIENT_URL=http://localhost:3456
      - CORS_ORIGINS=http://localhost:3456
    volumes:
      - ./server/src:/app/server/src
      - ./server/logs:/app/server/logs
    networks:
      - app-network
    depends_on:
      mongodb:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  postgres:
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=coworker
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  postgres_data:
