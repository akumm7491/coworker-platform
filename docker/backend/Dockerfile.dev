FROM node:18-alpine

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache python3 make g++ git

# Copy package files first for better caching
COPY server/package*.json ./server/
COPY server/tsconfig.json ./server/

WORKDIR /app/server

# Install dependencies ensuring ts-node and related packages are available
RUN npm install --legacy-peer-deps && \
    npm install --save-dev typescript@5.6.3 ts-node@10.9.2 ts-node-dev@2.0.0 && \
    npm install -g npm@latest && \
    npm cache clean --force

# Copy source code (this will be overridden by volume mount)
COPY server/src/ ./src/
COPY shared/ ../shared/

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3457/api/health || exit 1

EXPOSE 3457

# Start development server with ES modules support
ENV NODE_OPTIONS="--loader ts-node/esm --no-warnings"
ENV PATH /app/server/node_modules/.bin:$PATH

CMD ["npm", "run", "dev"]
